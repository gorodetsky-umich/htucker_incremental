** Features

- Various compression methods:
  - Root-to-leaf compression
  - Leaf-to-root compression
  - Batch compression with any dimension treated as a batch dimension
- Error-controlled decomposition with relative tolerance parameter
- Reconstruction and projection operations
- Incremental updates to incorporate new data
- Hierarchical binary and n-ary dimension trees
- Efficient tensor operations using NumPy

** Installation

#+begin_src bash
# Install from PyPI (coming soon)
pip install htucker

# Install from source
git clone https://github.com/yourusername/htucker_incremental.git
cd htucker_incremental
pip install -e .
#+end_src

** Basic Usage

#+begin_src python
import numpy as np
import htucker as ht

# Create a random tensor
tensor = np.random.rand(10, 8, 6, 4)

# Create HTucker object
htd = ht.HTucker()
htd.initialize(tensor)

# Compress using root-to-leaf approach
htd.compress_root2leaf(tensor)

# Reconstruct tensor
reconstructed = htd.reconstruct_all()

# Check reconstruction error
rel_error = np.linalg.norm(reconstructed - tensor) / np.linalg.norm(tensor)
print(f"Relative reconstruction error: {rel_error}")

# For leaf-to-root compression with dimension tree
dim_tree = ht.createDimensionTree(tensor, 2, 1)
htd = ht.HTucker()
htd.initialize(tensor, dimension_tree=dim_tree)
htd.rtol = 1e-6  # Set relative tolerance
htd.compress_leaf2root(tensor, dim_tree)

# Incremental updates
new_tensor = np.random.rand(10, 8, 6, 4)
htd.incremental_update(new_tensor)

# Batch processing
batch_tensor = np.random.rand(10, 8, 6, 5)  # Last dimension as batch
htd = ht.HTucker()
htd.initialize(batch_tensor, dimension_tree=dim_tree, batch=True, batch_dimension=3)
htd.compress_leaf2root_batch(batch_tensor, dim_tree, batch_dimension=3)
#+end_src

** Documentation

Detailed documentation will be available soon.

** Testing

To run the tests:

#+begin_src bash
cd htucker_incremental
python -m unittest discover -s htucker/tests
#+end_src

** License

This project is licensed under [LICENSE INFORMATION]

** Citation

If you use this software in your research, please cite:

[CITATION INFORMATION]

** Contributors

- Doruk Aksoy (University of Michigan)
- Alex Gorodetsky (University of Michigan)
